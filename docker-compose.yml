# service configuration for our dockerized Rails app
app:

  environment:
    - SMTP_PORT=${SMTP_PORT}
    - SMTP_ADDRESS=${SMTP_ADDRESS}
    - RAILS_ENV=${RAILS_ENV}
    - CONSUL_AP_IDP_SSO_TARGET_URL=${CONSUL_AP_IDP_SSO_TARGET_URL}
    - CONSUL_AP_SAML_CERT=${CONSUL_AP_SAML_CERT}
    - CONSUL_AP_IDP_SLO_TARGET_URL=${CONSUL_AP_IDP_SLO_TARGET_URL}
    - PROC_CONSUL_DB_HOST=${PROC_CONSUL_DB_HOST}
    - PROC_CONSUL_DB_PORT=${PROC_CONSUL_DB_PORT}
    - PROC_CONSUL_DB_POOL_SIZE=${VARIABLE_NAME}
    - PROC_CONSUL_DB_USER=${PROC_CONSUL_DB_USER}
    - PROC_CONSUL_DB_PASS=${PROC_CONSUL_DB_PASS}
    - PROC_CONSUL_DB_NAME=${PROC_CONSUL_DB_NAME}
  # use the Dockerfile next to this file
  build: .

  # rely on the RAILS_ENV value of the host machine
  # environment:
  #RAILS_ENV: $RAILS_ENV


  # expose the port we configured Unicorn to bind to
  ports:
    - "3001:3000"
  # map our application source code, in full, to the application root of our container
  volumes:
    - .:/var/www/consul
